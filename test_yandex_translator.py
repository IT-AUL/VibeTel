#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ Yandex Translate API
"""
import asyncio
import os
from dotenv import load_dotenv
from app.services.translator_service import TranslatorService

async def test_yandex_translator():
    load_dotenv()
    
    translator = TranslatorService()
    
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Yandex Translate API")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if not translator.api_key:
        print("‚ùå TRANSLATER_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False
    
    if not translator.folder_id:
        print("‚ùå TRANSLATER_FOLDER_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False
    
    print(f"‚úÖ API –∫–ª—é—á: {translator.api_key[:10]}...")
    print(f"‚úÖ Folder ID: {translator.folder_id}")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥ –æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    test_text = "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥: '{test_text}'")
    
    try:
        result = await translator.translate_text(test_text)
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: '{result}'")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥
        test_texts = ["—Å–æ–±–∞–∫–∞", "–∫–æ—Ç", "–¥–æ–º"]
        print(f"\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥: {test_texts}")
        
        results = await translator.translate_multiple(test_texts)
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {results}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(test_yandex_translator())
    
    if success:
        print("\nüéâ Yandex Translate API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else:
        print("\nüí• –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π")
        print("\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª:")
        print("TRANSLATER_API_KEY=–≤–∞—à_api_–∫–ª—é—á")
        print("TRANSLATER_FOLDER_ID=–≤–∞—à_folder_id")
